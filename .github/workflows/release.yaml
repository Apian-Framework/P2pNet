# This is a basic workflow to help you get started with Actions

name: Release - push nuget package to Github Packages

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101
          source-url: https://nuget.pkg.github.com/Apian-Framework/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      - name: Create Package
        run: dotnet pack -c Release /p:Version=${{ github.event.release.tag_name }} /p:PackageReleaseNotes="See https://github.com/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }}"
      - name: Hack! Override nuget.config access token (it cannot push a package)
        run: echo "$(sed 's/\(_authToken=\)[a-z0-9]*\($\)/\1${{ env.GITHUB_TOKEN }}\2/g' nuget.config)" > nuget.config
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Publish the package to GPR
        run: dotnet nuget push **/*.nupkg



