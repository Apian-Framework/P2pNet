
name: P2pNet.Redis Build/Test

env:
  SUBPROJECT: P2pNet.Redis

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
    - 'src/P2pNet.Redis/**'
    - 'tests/P2pNet.Redis.Tests/**'

# Would really like to do this:
#    paths:
#    - 'src/${{env.SUBPROJECT}}/**'
#    - 'tests/${{env.SUBPROJECT}}.Tests/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Checkout Target
      uses: actions/checkout@v3
      with:
        path: main

    - name: Checkout Apian dependencies (UniLog)
      uses: actions/checkout@v3
      with:
        repository: Apian-Framework/UniLog
        path: UniLog

    - name: Restore dependencies
      run: dotnet restore
      working-directory: main

    - name: Build
      run: dotnet build ./src/${{env.SUBPROJECT}} --configuration Release
      working-directory: main

    - name: Test # See the test project .csproj file for property definitions
      run: dotnet test ./tests/${{env.SUBPROJECT}}.Tests --verbosity normal
      working-directory: main

    - name: Checkout CI badges
      uses: actions/checkout@v3
      with:
        repository: Apian-Framework/Apian-CI-Badges
        ref: ${{env.SUBPROJECT}}
        path: badges

    - name: Commit Badges
      run: |
        if [ -f ./tests/${{env.SUBPROJECT}}.Tests/coverage/reports/badge_linecoverage.svg ]
        then
          cp -v ./tests/${{env.SUBPROJECT}}.Tests/coverage/reports/badge_linecoverage.svg ../badges/${{env.SUBPROJECT}}_linecoverage.svg
          cp -v ./tests/${{env.SUBPROJECT}}.Tests/coverage/reports/badge_branchcoverage.svg ../badges/${{env.SUBPROJECT}}_branchcoverage.svg
        else
          echo "No coverage badges created"
          cp -v ../badges/badge_linecoverage_none.svg ../badges/${{env.SUBPROJECT}}_linecoverage.svg
          cp -v ../badges/badge_branchcoverage_none.svg ../badges/${{env.SUBPROJECT}}_branchcoverage.svg
        fi
        cd ../badges
        git config --global user.name "ApianFrameworkPackageAccess"
        git config --global user.email "apian-framework-machine@bigfattail.com"
        git config -l | grep 'http\..*\.extraheader' | cut -d= -f1 | xargs -L1 git config --unset-all
        git add ${{env.SUBPROJECT}}_linecoverage.svg
        git add ${{env.SUBPROJECT}}_branchcoverage.svg
        git pull --ff-only
        git commit --allow-empty -m "${{env.SUBPROJECT}} coverage badges"
      working-directory: main

    - name: Push Badges
      uses: ad-m/github-push-action@master
      with:
        directory: badges
        repository: Apian-Framework/Apian-CI-Badges
        branch: ${{env.SUBPROJECT}}
        github_token: ${{ secrets.BOT_ACCESS_TOKEN }}

